type User {
  id: ID!
  username: String!
  email: String!
}

input Credentials {
  username: String!
  password: String!
}

input UserInput {
  username: String!
  email: String!
  password: String!
}

input UserModify {
  username: String
  email: String
  password: String
}

type TokenMessage {
  token: String
  message: String!
  user: User!
}
type RegisterMessage {
  message: String
  data: User
  token: String
}


type Query {
  users: [User]
  userById(id: ID!): User
}

type Mutation {
  login(email: String!, password: String!): TokenMessage
  register(user: UserInput!): RegisterMessage
  updateUser(user: UserModify!): TokenMessage
  deleteUser: TokenMessage
}